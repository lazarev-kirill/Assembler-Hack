namespace CSAssembler
{
    internal class Table
    {
        private Dictionary<string, int> table = new Dictionary<string, int>()
        {
            {"R0", 0},
            {"R1", 1},
            {"R2", 2},
            {"R3", 3},
            {"R4", 4},
            {"R5", 5},
            {"R6", 6},
            {"R7", 7},
            {"R8", 8},
            {"R9", 9},
            {"R10", 10},
            {"R11", 11},
            {"R12", 12},
            {"R13", 13},
            {"R14", 14},
            {"R15", 15},
            {"SP", 0},
            {"LCL", 1},
            {"ARG", 2},
            {"THIS", 3},
            {"THAT", 4},
            {"SCREEN", 16384},
            {"KBD", 24576},
            {" ", 32},
            {"!", 33},
            {"\"", 34},
            {"#", 35},
            {"$", 36},
            {"%", 37},
            {"&", 38},
            {"'", 39},
            {"(", 40},
            {")", 41},
            {"*", 42},
            {"+", 43},
            {",", 44},
            {"-", 45},
            {".", 46},
            {"//", 47},
            {"0", 48},
            {"1", 49},
            {"2", 50},
            {"3", 51},
            {"4", 52},
            {"5", 53},
            {"6", 54},
            {"7", 55},
            {"8", 56},
            {"9", 57},
            {":", 58},
            {";", 59},
            {"<", 60},
            {"\\", 61},
            {">", 62},
            {"?", 63},
            {"@", 64},
            {"A", 65},
            {"B", 66},
            {"C", 67},
            {"D", 68},
            {"E", 69},
            {"F", 70},
            {"G", 71},
            {"H", 72},
            {"I", 73},
            {"J", 74},
            {"K", 75},
            {"L", 76},
            {"M", 77},
            {"N", 78},
            {"O", 79},
            {"P", 80},
            {"Q", 81},
            {"R", 82},
            {"S", 83},
            {"T", 84},
            {"U", 85},
            {"V", 86},
            {"W", 87},
            {"X", 88},
            {"Y", 89},
            {"Z", 90},
            {"[", 91},
            {"/", 92},
            {"]", 93},
            {"^", 94},
            {"_", 95},
            {"`", 96},
            {"a", 97},
            {"b", 98},
            {"c", 99},
            {"d", 100},
            {"e", 101},
            {"f", 102},
            {"g", 103},
            {"h", 104},
            {"i", 105},
            {"j", 106},
            {"k", 107},
            {"l", 108},
            {"m", 109},
            {"n", 110},
            {"o", 111},
            {"p", 112},
            {"q", 113},
            {"r", 114},
            {"s", 115},
            {"t", 116},
            {"u", 117},
            {"v", 118},
            {"w", 119},
            {"x", 120},
            {"y", 121},
            {"z", 122},
            {"{", 123},
            {"|", 124},
            {"}", 125},
            {"~", 126},
            {"DEL", 127},
            {"newLine", 128},
            {"backSpace", 129},
            {"leftArrow", 130},
            {"upArrow", 131},
            {"rightArrow", 132},
            {"downArrow", 133},
            {"home", 134},
            {"end", 135},
            {"pageUp", 136},
            {"pageDown", 137},
            {"insert", 138},
            {"delete", 139},
            {"esc", 140},
            {"f1", 141},
            {"f2", 142},
            {"f3", 143},
            {"f4", 144},
            {"f5", 145},
            {"f6", 146},
            {"f7", 147},
            {"f8", 148},
            {"f9", 149},
            {"f10", 150},
            {"f11", 151},
            {"f12", 152},
        };
        private Dictionary<string, int> newTable = new Dictionary<string, int>(); 
        public void addEntry(string symbol, int address) {
            table.Add(symbol, address); 
            newTable.Add(symbol, address);
        }
        public bool contains(string symbol) 
        {
            return table.ContainsKey(symbol); 
        }
        public int getAdress(string symbol) {
            return table[symbol]; 
        }
        public void showNewTable()
        {
            foreach (var line in newTable) 
            {
                Console.WriteLine(line.Key + ": " + line.Value);
            }
        }
    }
}
